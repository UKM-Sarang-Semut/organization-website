// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Positions {
  Ketua
  Wakil
  Bendahara
  Anggota
}

model Profile {
  id Int @id @default(autoincrement())
  userId String @unique // related to users on authentication on supabase server
  name String
  bio String?
  avatarUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  
  // relationships
  activities Activity[]
  
  @@map("profiles")  // This tells Prisma to map the model to the 'profiles' table
}

model Division{
  id Int @id @default(autoincrement())
  description String
  activityDate DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  
  // relationships
  pivots PivotDivisionActivity[]
  members Member[]
  
  @@map("divisions")
}

model Member{
  id Int @id @default(autoincrement())
  divisionId Int
  name String
  position String
  avatarUrl String
  terminationDate DateTime
  joinDate DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  
  // relationships
  division Division @relation(fields: [divisionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  
  @@map("members")
}

model Activity{
  id Int @id @default(autoincrement())
  description String
  profileId Int // related to users on authentication on supabase server
  activityDate DateTime @db.Timestamptz(6)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  
  //relationships
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  pivots PivotDivisionActivity[]
  activity_documentations ActivityDocumentation[]
  
  @@map("activities")
}

model PivotDivisionActivity{
  id Int @id @default(autoincrement())
  divisionId Int
  activityId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  
  //relationships
  division Division @relation(fields: [divisionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  activity Activity @relation(fields: [activityId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  
  @@map("pivot_division_activities")
}

model ActivityDocumentation{
  id Int @id @default(autoincrement())
  activityId Int
  documentationUrl String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  
  // relationships
  activity Activity @relation(fields: [activityId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  
  @@map("activity_documentations")
}